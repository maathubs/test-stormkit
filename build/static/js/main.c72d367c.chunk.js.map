{"version":3,"sources":["components/Login/Snackbar.js","components/Login/Login.js","components/Home/Snackbar.js","components/Home/Home.js","components/Export/Export.js","components/Exportlist/Exportlist.js","components/Collections/Collections.js","App.js","serviceWorker.js","index.js"],"names":["useStyles1","makeStyles","theme","error","backgroundColor","palette","red","message","display","alignItems","appbar","margin","width","marginTop","spacing","snackbar","background","color","fontSize","icon","padding","Snackbar","props","classes","className","userName","blurName","SnackbarContent","id","clsx","iconVariant","userPassword","blurPassword","errorMsg","createMuiTheme","primary","green","overrides","MuiInputLabel","root","Login","state","value","focusName","focusPassword","hostName","portName","isClicked","single","multi","shrink","connect","setState","console","log","axios","post","query","print","gql","then","result","obj","data","history","push","pathname","userData","err","user","handleChange","event","target","handleChangeHost","handleChangePort","handleChangeName","handleChangePassword","onFocusName","onFocusPassword","onBlurName","onBlurPassword","localStorage","getItem","clear","this","fab","AppBar","title","style","align","nav","noValidate","autoComplete","TextField","label","placeholder","textField","fullWidth","onChange","select","required","SelectProps","native","variant","map","option","key","dense","onFocus","onBlur","type","ThemeProvider","Button","onClick","Component","withStyles","marginLeft","main","height","paddingLeft","justifyContent","menu","formControl","minWidth","selectEmpty","dbName","Home","users","dbname","emptyCollection","collections","name","getcollection","length","localData","local","JSON","parse","getuser","location","setItem","stringify","divele","Table","link","TableHead","TableRow","TableCell","TableBody","to","userdetails","sizeOnDisk","empty","overflowX","table","textDecoration","linkPath","Export","progressValue","collectionList","impSelectedCollection","toString","variables","host","port","impHost","impHostname","impPort","impPortname","impDb","impDbname","adduser","MenuProps","app","Exportlist","dbNames","Chip","chip","Collections","checked","handleInputChange","bind","selectedCollection","arr","each","selectedArr","indexOf","index","splice","forEach","element","Checkbox","allign","App","path","component","from","exact","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c72d367c.chunk.js","sourcesContent":["import React from 'react';\nimport clsx from 'clsx';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles1 = makeStyles((theme) => ({\n  error: {\n    backgroundColor: theme.palette.error.red,\n  }, \n  message: {\n    display: 'flex',\n    alignItems: 'center',\n  }, \n  appbar:{\n    margin:'0 auto',\n    width:374,\n    marginTop:theme.spacing(1)\n  },\n  snackbar:\n  {\n    background:\"red\",\n    color:'black',\n    fontSize:17\n  },\n  icon:{\n    padding:theme.spacing(1)\n  }\n\n}));\n  \nexport default function Snackbar(props) {\n  const classes = useStyles1();\n  return (\n    <div className={classes.appbar}>\n      {props.userName===\"\"&&props.blurName?\n        <SnackbarContent className={classes.snackbar}\n          message={\n            <span id=\"client-snackbar\" className={classes.message}>\n              < ErrorIcon className={clsx(classes.icon, classes.iconVariant)}/> \n              Username is empty           \n            </span>\n          } \n        />\n      :null}\n      {props.userPassword===\"\"&&props.blurPassword?\n        <SnackbarContent\n        className={classes.snackbar}\n          message={\n            <span id=\"client-snackbar\" className={classes.message}>\n              < ErrorIcon className={clsx(classes.icon, classes.iconVariant)}/> \n              Password is empty           \n            </span>\n          }  \n        />\n      :null}\n      {props.errorMsg?\n        <SnackbarContent\n        className={classes.snackbar}\n          message={\n            <span id=\"client-snackbar\" className={classes.message}>\n              < ErrorIcon className={classes.icon}/> \n              Enter all the fields      \n            </span>\n          }\n        />\n      :null}\n    </div>\n  );\n}\n  ","import React, { Component } from 'react';\nimport gql from \"graphql-tag\";\nimport axios from 'axios';\nimport clsx from 'clsx';\nimport TextField from '@material-ui/core/TextField';\nimport { print } from \"graphql\"\nimport { withStyles } from \"@material-ui/core/styles\";\nimport {createMuiTheme} from '@material-ui/core/styles';\nimport { ThemeProvider } from '@material-ui/styles';\nimport Button from '@material-ui/core/Button';\nimport { green } from '@material-ui/core/colors';\nimport Snackbar from './Snackbar';\nimport {AppBar} from '@material-ui/core';\nconst styles = theme => ({\n  fab:{\n    margin:'0 auto',\n    width:'39%',\n    marginTop:theme.spacing(6)\n  },\n  appbar:{\n    margin:'0 auto',\n    width:374,\n    marginTop:theme.spacing(10)\n  },\n  textField: {\n    width: 489,\n    marginTop: theme.spacing(4),\n  },\n  dense: {\n    marginTop: theme.spacing(4)\n  },\n  margin: {\n    marginLeft: theme.spacing(44),\n    marginTop:theme.spacing(4)\n  },\n  main:{\n    marginLeft:theme.spacing(6),\n    marginTop:theme.spacing(5)\n  },\n  nav:{\n    background:\"black\",\n    height:45,\n    paddingLeft:theme.spacing(7),\n    justifyContent:'center',\n    alignItems:\"center\"\n  },\n  menu: {\n    width: 200,\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(4),\n  },\n  option:{\n    fontSize:10\n  },\n});\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: green,\n  },\n  overrides: {\n    MuiInputLabel: { \n      root: { \n        color:'yellow',\n        fontSize: 13,\n      },\n    },\n  }\n});\n\nclass Login extends Component { \n  state = {\n    value:'',\n    focusName:false,\n    focusPassword:false,\n    blurPassword:false,\n    blurName:false,\n    userName:'',\n    userPassword:'',\n    hostName:'',\n    portName:'',\n    isClicked:false,\n    errorMsg:false,\n    single: null,\n    multi: null,\n    shrink:false\n  }\n\n  componentDidMount(){\n    const localData=localStorage.getItem('localData')\n    if(localData){\n      localStorage.clear();\n    }\n  }\n\n  connect = () => {\n    if(this.state.hostName&&this.state.portName&&this.state.value){\n      this.setState({ \n        isClicked:true\n      })\n      console.log(\"button clicked\",this.state)\n      axios.post(\"http://localhost:5000/graphql\", {\n        query:print(gql`\n          query{\n            getuser(host:\"${this.state.hostName}\",port:\"${this.state.portName}\") {\n              name,\n              sizeOnDisk,\n              empty\n            }\n          }      \n        `)\n      })\n      .then((result) => {\n        const obj=result.data\n        console.log(\"result.data\",result.data);\n        this.props.history.push({\n          pathname: '/Home',\n          query: {\n            userData: obj\n          },\n          state:{userData:obj,hostName:this.state.hostName,portName:this.state.portName}\n        })           \n      }, err => {\n          this.setState({\n            user:true\n          });\n        console.log(err)\n      })\n    }\n    else{\n      this.setState({\n        errorMsg:true\n      })\n    }\n  }\n\n  handleChange=(event)=>{\n    this.setState({\n      value:event.target.value,\n      shrink:true\n    })\n  }\n\n  handleChangeHost=(event)=>{\n    this.setState({\n      hostName:event.target.value,   \n    })\n  }\n\n  handleChangePort=(event)=>{\n    this.setState({\n      portName:event.target.value   \n    })\n  }\n\n  handleChangeName=(event)=>{\n    this.setState({\n      userName:event.target.value\n    })\n  }\n\n  handleChangePassword=(event)=>{\n    this.setState({\n      userPassword:event.target.value\n    })\n  }\n\n  onFocusName=()=>{\n    this.setState({\n      focusName:true,\n    })\n  }\n\n  onFocusPassword=()=>{\n    this.setState({\n      focusPassword:true\n    })\n  }\n\n  onBlurName=()=>{\n    this.setState({\n      blurName:true,\n    })\n  }\n\n  onBlurPassword=()=>{\n    this.setState({\n      blurPassword:true,\n    })\n  }\n  render() {\n    const options = [\n      {\n        value: '',  \n      },\n      {\n        value: 'None',  \n      },\n      {\n        value: 'Username/Password',  \n      },\n      {\n        value: 'SCRAM-SHA-256',  \n      },\n      {\n        value: 'Kerberos',  \n      },\n      {\n        value: 'LDAP',  \n      },\n    ];\n    const { classes } = this.props;\n    return (\n      <div  className={classes.fab}> \n        <AppBar title=\"My App\" style={{ align: \"center\" }} className={classes.nav}>Import to Host</AppBar>\n        <div >\n          <form  noValidate autoComplete=\"off\">\n            <TextField\n              id=\"standard-with-placeholder\"\n              label=\"Hostname\"\n              placeholder=\"localhost\"\n              className={classes.textField}\n              margin=\"normal\"\n              fullWidth\n              onChange={(event) => {\n                this.handleChangeHost(event)\n              }}\n            />\n            <div>\n              <TextField\n                id=\"standard-with-placeholder\"\n                label=\"Port\"\n                placeholder=\"27017\"\n                className={classes.textField}\n                margin=\"normal\"\n                fullWidth\n                onChange={(event) => {\n                  this.handleChangePort(event)\n                }}\n              />\n            </div>\n            <div> \n              <TextField\n                select\n                label=\"Authentication\"\n                required className={classes.textField}\n                onChange={(event) => {\n                  this.handleChange(event)\n                }}\n                SelectProps={{\n                  native: true,\n                  className:\"option\"\n                }}\n                variant=\"filled\"\n              >\n              {options.map(option => (\n                <option className={classes.option} key={option.value} value={option.value}>\n                  {option.value}\n                </option>\n              ))}\n              </TextField>\n              </div>\n              <div>\n                {this.state.value===\"Username/Password\"?\n                  <div>\n                    <div>\n                      <TextField\n                        id=\"outlined-dense\"\n                        label=\"UserName\"\n                        className={clsx(classes.textField, classes.dense)}\n                        variant=\"outlined\"\n                        onFocus={this.onFocusName}\n                        onChange={(event) => {\n                          this.handleChangeName(event)\n                        }}\n                        onBlur={this.onBlurName}\n                      />\n                      {this.state.blurName&&!this.state.userName?\n                        <Snackbar  blurName={this.state.blurName} userName={this.state.userName}/>\n                      :null}\n                    </div>\n                  <div>\n                    <TextField\n                      label=\"Password\"\n                      className={clsx(classes.textField, classes.dense)}\n                      onFocus={this.onFocusPassword}\n                      onBlur={this.onBlurPassword}\n                      onChange={(event) => {this.handleChangePassword(event)}}\n                      type=\"password\"\n                      variant=\"outlined\"\n                    />\n                    {this.state.blurPassword&&!this.state.userPassword?\n                      <Snackbar  blurPassword={this.state.blurPassword} userPassword={this.state.userPassword}/>\n                    :null}\n                  </div>\n                </div>\n              :null}  \n            </div>\n          </form>\n        </div>\n        <ThemeProvider theme={theme}>\n          <Button variant=\"contained\" color=\"primary\" className={classes.margin} onClick={this.connect}>\n            Connect\n          </Button>\n          {this.state.errorMsg&&(!this.state.hostName||!this.state.portName||!this.state.value)?\n            <Snackbar errorMsg={this.state.errorMsg}/>\n          :null}\n        </ThemeProvider>         \n      </div>\n    );\n  }\n}\nexport default withStyles(styles)(Login);","import React from 'react';\nimport clsx from 'clsx';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles1 = makeStyles((theme) => ({\n  error: {\n    backgroundColor: theme.palette.error.red,\n  }, \n  message: {\n    display: 'flex',\n    alignItems: 'center',\n  }, \n  appbar:{\n    margin:'0 auto',\n    width:374,\n    marginTop:theme.spacing(1)\n  },\n  snackbar:\n  {\n    background:\"red\",\n    color:'black',\n    fontSize:17\n  },\n  icon:{\n    padding:theme.spacing(1)\n  }\n}));\n  \nexport default function Snackbar(props) {\n  const classes = useStyles1();\n  return (\n    <div className={classes.appbar}>\n        <SnackbarContent className={classes.snackbar}\n          message={\n            <span id=\"client-snackbar\" className={classes.message}>\n              < ErrorIcon className={clsx(classes.icon, classes.iconVariant)}/> \n              Can not export the Database {props.dbName}          \n            </span>\n          } \n        />\n    </div>\n  );\n}\n  ","import React, { Component } from 'react';\nimport { Link } from \"react-router-dom\";\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport { ThemeProvider } from '@material-ui/styles';\nimport Snackbar from './Snackbar';\nimport { green } from '@material-ui/core/colors';\nimport { withStyles } from \"@material-ui/core/styles\";\nimport {createMuiTheme} from '@material-ui/core/styles';\nimport gql from \"graphql-tag\";\nimport axios from 'axios';\nimport { print } from \"graphql\"\nconst styles = theme => ({\n  root: {\n    width: '70%',\n    marginTop: theme.spacing(2),\n    overflowX: 'auto',\n    fontSize:40,\n    color:'red',\n    alignItems: \"center\",\n    background: 'cornflowerblue',\n    justifyContent:\"center\"\n  },\n  table: {\n    minWidth: 200,\n    background: 'bisque',\n    alignItems: \"center\",\n  },\n  link:{\n    color:\"blue\",\n    fontSize:'15px',\n    textDecoration:\"none\",\n    background: 'bisque',\n},\n  divele:{\n    fontSize:'10',\n    width:'50%',\n    margin:'0 auto',\n    marginTop: theme.spacing(8),\n  },\n  linkPath:{\n    color:\"blue\",\n    fontSize:'15px',\n    textDecoration:\"none\",    \n  },\n  margin: {\n    marginTop:theme.spacing(4),\n    justifyContent:\"center\"\n  },\n});\nconst theme = createMuiTheme({\n  palette: {\n    primary: green,\n  },\n});\nclass Home extends Component {\n  state = {\n    users:[] ,\n    dbname:'',\n    emptyCollection:false,\n    errorMsg:''\n  }\n\n  componentDidMount() {\n    const localData=localStorage.getItem('localData')\n    if(!localData){\n      console.log(this.props.location)\n      const users=this.props.location.state.userData.data.getuser;\n      const hostName=this.props.location.state.hostName;\n      const portName=this.props.location.state.portName;\n      localStorage.setItem('localData',JSON.stringify(this.props.location.state));\n      const localData=localStorage.getItem('localData')\n      console.log(localData)\n      this.setState({\n        users:users,\n        hostName:hostName,\n        portName:portName\n      })   \n    }else{\n      const localData=localStorage.getItem('localData')\n      const local=JSON.parse(localData)\n      console.log(\"localData in else\",JSON.parse(localData));\n      const hostName=local.hostName;\n      const portName=local.portName;\n      const users=local.userData.data.getuser\n      console.log(\"hostname\",hostName,portName,users)\n      this.setState({\n        users:users,\n        hostName:hostName,\n        portName:portName\n      })   \n     } \n  } \n  collections=(user)=>{\n    console.log(\"called collections\",user,this.state)\n    console.log(\"button clicked\",this.state)\n    axios.post(\"http://localhost:5000/graphql\", {\n      query:print(gql`\n        query{\n          getcollection(host:\"${this.state.hostName}\",port:\"${this.state.portName}\",dbname:\"${user.name}\") {\n            name,\n            type,\n          }\n        }      \n      `)\n    })\n    .then((result) => {\n      this.setState({\n        dbname:user.name\n      })\n      if(result.data.data.getcollection.length>0){\n        const obj=result.data\n        console.log(\"result.data\",obj);\n        this.props.history.push({\n          pathname: '/Collections',\n          query: {\n            userData: obj\n          },\n          state:{userData:obj,user:this.state.users,hostName:this.state.hostName,portName:this.state.portName,dbName:this.state.dbname}\n        })           \n      }else{\n        this.setState({\n          emptyCollection:true,\n          errorMsg:true\n        })\n      }\n    }, err => {\n      this.setState({\n        user:true\n      });\n      console.log(err)\n    })\n  }  \n  render() {\n    console.log(\"dbName\",this.state)\n    const { classes } = this.props;\n    return ( \n      <div className={classes.divele}>\n        <Table className={classes.link} color=\"secondary\">\n          <TableHead >\n            <TableRow >\n              <TableCell align=\"center\">Name</TableCell>\n              <TableCell align=\"center\">sizeOnDisk</TableCell>\n              <TableCell align=\"center\">empty</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {this.state.users.map(user=> (\n              <TableRow key={user.name}>\n                <TableCell  align=\"center\">\n                  <Link \n                    className={classes.link}\n                    onClick={() => {this.collections(user)}} >\n                    {user.name}\n                  </Link>\n                </TableCell>\n                <TableCell align=\"center\"><Link className={classes.link} to={{ pathname: '/Collections', state: { userdetails:{user}} }}>{user.sizeOnDisk}</Link></TableCell>\n                <TableCell align=\"center\"><Link className={classes.link} to={{ pathname: '/Collections', state: { userdetails:{user}} }}>{user.empty}</Link></TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n        <ThemeProvider theme={theme}>\n        {this.state.errorMsg&&this.state.emptyCollection?\n            <Snackbar dbName={this.state.dbname} errorMsg={this.state.errorMsg}/>\n          :null}\n        </ThemeProvider>  \n      </div>\n    );\n  }\n}\nexport default withStyles(styles)(Home);\n\n\n","import React, { Component } from 'react';\nimport gql from \"graphql-tag\";\nimport axios from 'axios';\nimport clsx from 'clsx';\nimport TextField from '@material-ui/core/TextField';\nimport { print } from \"graphql\"\nimport { withStyles } from \"@material-ui/core/styles\";\nimport {createMuiTheme} from '@material-ui/core/styles';\nimport { ThemeProvider } from '@material-ui/styles';\nimport Button from '@material-ui/core/Button';\nimport { green } from '@material-ui/core/colors';\nimport Snackbar from '../Login/Snackbar';\nimport {AppBar} from '@material-ui/core';\n// import CircularProgress from '@material-ui/core/CircularProgress';\nconst styles = theme => ({\n  fab:{\n    margin:'0 auto',\n    width:'39%',\n    marginTop:theme.spacing(10)\n  },\n  appbar:{\n    margin:'0 auto',\n    width:374,\n    marginTop:theme.spacing(10)\n  },\n  app:{\n    background:\"red\"\n  },\n  textField: {\n    width: 489,\n    marginTop: theme.spacing(2),\n  },\n  margin: {\n    marginLeft: theme.spacing(44),\n    marginTop:theme.spacing(4),\n  },\n  nav:{\n    background:\"black\",\n    height:45,\n    paddingLeft:theme.spacing(7),\n    justifyContent:'center',\n    alignItems:\"center\"\n  }\n});\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: green,\n  },\n});\n\nclass Export extends Component {\n  state = {\n    value:'',\n    focusName:false,\n    focusPassword:false,\n    blurPassword:false,\n    blurName:false,\n    userName:'',\n    userPassword:'',\n    hostName:'',\n    portName:'',\n    isClicked:false,\n    errorMsg:false,\n    progressValue:0\n  }\n\n  componentDidMount(){\n    const impHostname=this.props.location.state.impHostname;\n    const impPortname=this.props.location.state.impPortname;\n    const impDbname=this.props.location.state.impDbname;\n    const impSelectedCollection=this.props.location.state.userData;\n    this.setState({\n      impHostname:impHostname,\n      impPortname:impPortname,\n      impDbname:impDbname,\n      impSelectedCollection:impSelectedCollection\n    })\n  } \n \n  connect = () => { \n    if(this.state.hostName&&this.state.portName&&this.state.value){\n      console.log(\"button clicked in export\",this.state)\n      const collectionList = this.state.impSelectedCollection.toString();\n      axios.post(\"http://localhost:5000/graphql\", {\n        query:print(gql`\n          mutation adduser($host:String!,$port:String!,$impHost:String!,$impPort:String,$impDb:String,$collectionList:String!){\n            adduser(host:$host,port:$port,impHost:$impHost,impPort:$impPort,impDb:$impDb,collectionList:$collectionList) \n          },\n        `),\n        variables:{\n          host:this.state.hostName,\n          port:this.state.portName,\n          impHost:this.state.impHostname,\n          impPort:this.state.impPortname,\n          impDb:this.state.impDbname,\n          collectionList:collectionList,\n        }      \n      })\n      .then((result) => {\n        console.log(\"result\",JSON.parse(result.data.data.adduser));\n        console.log(\"result without parsing\",result)\n        this.props.history.push({\n          pathname: '/Exportlist',\n            query: {\n              userData: JSON.parse(result.data.data.adduser)\n            },\n            state:{users:JSON.parse(result.data.data.adduser)}\n        })            \n      }, err => {\n        console.log(err)\n      })\n    }\n    else{\n      this.setState({\n        errorMsg:true\n      })\n    }              \n  }\n  handleChange=(event)=>{\n    this.setState({\n      value:event.target.value\n    })\n  }\n  handleChangeHost=(event)=>{\n    this.setState({\n      hostName:event.target.value  \n    })\n  }\n\n  handleChangePort=(event)=>{\n    this.setState({\n      portName:event.target.value  \n    })\n  }\n\n  handleChangeName=(event)=>{\n    this.setState({\n      userName:event.target.value\n    })\n  }\n\n  handleChangePassword=(event)=>{\n    this.setState({\n      userPassword:event.target.value\n    })\n  }\n  \n  onFocusName=()=>{\n    this.setState({\n      focusName:true,\n    })\n  }\n  \n  onFocusPassword=()=>{\n    this.setState({\n      focusPassword:true\n    })\n  }\n\n  onBlurName=()=>{\n    this.setState({\n      blurName:true,\n    })\n  }\n\n  onBlurPassword=()=>{\n    this.setState({\n      blurPassword:true,\n    })\n  }\n  render() {\n    const options = [\n      {\n        value: ''  \n      },\n      {\n        value: 'None'  \n      },\n      {\n        value: 'Username/Password'  \n      },\n      {\n        value: 'SCRAM-SHA-256'  \n      },\n      {\n        value: 'Kerberos' \n      },\n      {\n        value: 'LDAP'  \n      },\n    ];\n    const { classes } = this.props;\n    return (\n      <div  className={classes.fab}> \n        <AppBar title=\"My App\" style={{ align: \"center\" }} className={classes.nav}>Export from Host</AppBar>\n        <div >\n          <form  noValidate autoComplete=\"off\">\n            <TextField\n              id=\"standard-with-placeholder\"\n              label=\"Hostname\"\n              placeholder=\"localhost\"\n              className={classes.textField}\n              margin=\"normal\"\n              fullWidth\n              onChange={(event) => {\n                this.handleChangeHost(event)\n              }}\n            />\n            <div>\n              <TextField\n                id=\"standard-with-placeholder\"\n                label=\"Port\"\n                placeholder=\"27017\"\n                className={classes.textField}\n                margin=\"normal\"\n                fullWidth\n                onChange={(event) => {\n                  this.handleChangePort(event)\n                }}\n              />\n            </div>\n            <div>\n              <TextField\n                select\n                label=\"Authentication\"\n                required className={classes.textField}\n                onChange={(event) => {\n                  this.handleChange(event)\n                }}\n                SelectProps={{\n                  native: true,\n                  MenuProps: {\n                    className: classes.menu,\n                  },\n                }}\n                margin=\"normal\"\n                variant=\"filled\"\n                fullWidth\n              >\n                {options.map(option => (\n                  <option key={option.value} value={option.value}>\n                    {option.value}\n                  </option>\n                ))}\n              </TextField>\n            </div>\n            <div>\n              {this.state.value===\"Username/Password\"?\n                <div>\n                  <div>\n                    <TextField\n                      id=\"outlined-dense\"\n                      label=\"UserName\"\n                      className={clsx(classes.textField, classes.dense)}\n                      variant=\"outlined\"\n                      onFocus={\n                        this.onFocusName\n                      }\n                      onChange={(event) => {\n                        this.handleChangeName(event)\n                      }}\n                      onBlur={\n                        this.onBlurName\n                      }\n                    />\n                    {this.state.blurName&&!this.state.userName?\n                      <Snackbar blurName={this.state.blurName} userName={this.state.userName} />\n                    :null}\n                  </div>\n                  <div>\n                    <TextField\n                      label=\"Password\"\n                      className={clsx(classes.textField, classes.dense)}\n                      onFocus={\n                        this.onFocusPassword\n                      }\n                      onBlur={\n                        this.onBlurPassword\n                      }\n                      onChange={(event) => {\n                        this.handleChangePassword(event)\n                      }}\n                      type=\"password\"\n                      variant=\"outlined\"\n                    />\n                    {this.state.blurPassword&&!this.state.userPassword?\n                      <Snackbar  blurPassword={this.state.blurPassword} userPassword={this.state.userPassword}/>\n                    :null}\n                  </div>\n                </div>\n              :null}  \n            </div>\n          </form>\n        </div>\n        <ThemeProvider theme={theme}>\n          <Button variant=\"contained\" color=\"primary\" className={classes.margin} onClick={this.connect}>\n            Export\n          </Button>\n          {this.state.errorMsg&&(!this.state.hostName||!this.state.portName||!this.state.value)?\n            <Snackbar  errorMsg={this.state.errorMsg}/>\n          :null}\n        </ThemeProvider>\n        {/* <CircularProgress className={classes.progress} variant=\"static\" value={50} />          */}\n      </div>\n    );\n  }\n}\nexport default withStyles(styles)(Export);","import React, { Component } from 'react';\nimport TagFacesIcon from '@material-ui/icons/TagFaces';\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Chip from '@material-ui/core/Chip';\nconst styles = theme => ({\n  root:{\n    width:'37%',\n    margin:'0 auto',\n    marginTop: theme.spacing(8),\n    background: 'bisque',\n  },\n  divele:{\n    fontSize:'10',\n    width:'11%',\n    margin:'0 auto',\n    marginTop: theme.spacing(8),\n  },\n  link:{\n    color:\"blue\",\n    fontSize:'15px',\n    textDecoration:\"none\",\n    background: 'bisque',\n  },\n  linkPath:{\n    color:\"blue\",\n    fontSize:'15px',\n    textDecoration:\"none\"    \n  },\n  margin: {\n    marginTop:theme.spacing(4),\n    justifyContent:\"center\"\n  },\n  chip: {\n    margin: theme.spacing(0.5),\n  },\n});\n\nclass Exportlist extends Component {\n  state = {\n    dbNames:[]\n  }\n\n  componentDidMount() {\n    const dbNames=this.props.location.state.users;\n    console.log(\"dbnames\",dbNames)\n    this.setState({\n      dbNames:dbNames\n    })   \n  }   \n  render() {\n    const { classes } = this.props;\n    const icon = <TagFacesIcon />;\n    return (\n      <div className={classes.root}>\n        <div className={classes.divele}>\n          {this.state.dbNames.map(dbName=> (\n            <Chip\n              key={dbName.name}\n              variant=\"outlined\"\n              label={dbName.name}\n              icon={icon}\n              className={classes.chip}\n              color=\"secondary\"\n            />\n          ))}      \n        </div>\n      </div>\n    );\n  }\n}\nexport default withStyles(styles)(Exportlist);\n\n\n","import React, { Component } from 'react';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport { ThemeProvider } from '@material-ui/styles';\nimport Button from '@material-ui/core/Button';\nimport { green } from '@material-ui/core/colors';\nimport { withStyles } from \"@material-ui/core/styles\";\nimport {createMuiTheme} from '@material-ui/core/styles';\nimport Checkbox from '@material-ui/core/Checkbox';\nconst styles = theme => ({\n  root: {\n    width: '70%',\n    marginTop: theme.spacing(2),\n    overflowX: 'auto',\n    fontSize:40,\n    color:'red',\n    alignItems: \"center\",\n    background: 'cornflowerblue',\n    justifyContent:\"center\"\n  },\n  table: {\n    minWidth: 200,\n    background: 'bisque',\n    alignItems: \"center\",\n  },\n  link:{\n    color:\"blue\",\n    fontSize:'15px',\n    textDecoration:\"none\",\n    background: 'bisque',\n  },\n  divele:{\n    fontSize:'10',\n    width:'50%',\n    margin:'0 auto',\n    marginTop: theme.spacing(8),\n  },\n  linkPath:{\n    color:\"blue\",\n    fontSize:'15px',\n    textDecoration:\"none\",    \n  },\n  margin: {\n    marginTop:theme.spacing(4),\n    justifyContent:\"center\"\n  },\n});\nconst theme = createMuiTheme({\n  palette: {\n    primary: green,\n  },\n});\n\nclass Collections extends Component {\n  state = {\n    users:[] ,\n    checked:false\n  }\n  \n  componentDidMount() {\n    console.log(this.props.location.state)\n    const users=this.props.location.state.userData.data.getcollection;\n    const hostName=this.props.location.state.hostName;\n    const portName=this.props.location.state.portName;\n    const dbName=this.props.location.state.dbName;\n    console.log(users)\n    this.setState({\n      dbName:dbName,\n      users:users,\n      hostName:hostName,\n      portName:portName,\n      checked:false,\n      selectedCollection:[]\n    })   \n  }\n  handleInputChange= this.handleInputChange.bind(this);  \n  handleInputChange (event) {\n    console.log(\"event.target.value\",event.target.value)\n    if (this.state.selectedCollection) {\n      var selectedArr = [...this.state.selectedCollection]\n    } \n    if(selectedArr.indexOf(event.target.value) !== -1){\n      console.log(\"value exists\")\n      var index = selectedArr.indexOf(event.target.value);\n      if (index > -1) {\n        selectedArr.splice(index, 1);\n      }\n    }\n    else{\n      selectedArr.push(event.target.value)\n    }       \n    this.setState({\n        selectedCollection: selectedArr\n    })\n    selectedArr.forEach(element => {\n      console.log(\"element\",element)  \n    });\n  }\n  collections=()=>{\n    if(this.state.selectedCollection.length>0) {\n      console.log(\"this.state.selectedCollection\",this.state.selectedCollection)\n      this.props.history.push({\n        pathname: '/Export',\n        state:{userData:this.state.selectedCollection,impDbname:this.state.dbName,impHostname:this.state.hostName,impPortname:this.state.portName}\n      }) \n    }\n    else{\n      console.log(\"usersssss\",this.state.users)\n      const arr=[];\n      for(const each of this.state.users)\n      {\n        arr.push(each.name)\n      }\n      console.log(\"arr\",arr)\n      this.props.history.push({\n        pathname: '/Export',\n        state:{userData:arr,impDbname:this.state.dbName,impHostname:this.state.hostName,impPortname:this.state.portName}\n      }) \n    }  \n  }  \n  render() {\n    console.log(\"this.state\",this.state.selectedCollection)\n    const { classes } = this.props;\n    return ( \n      <div className={classes.divele}>\n        <Table className={classes.link} color=\"secondary\">\n          <TableHead >\n            <TableRow >\n              <TableCell align=\"center\">name</TableCell>\n              <TableCell align=\"center\">Type</TableCell>\n              <TableCell align=\"center\">Select</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {this.state.users.map(user=> (\n              <TableRow key={user.name}>\n                <TableCell  align=\"center\">{user.name}</TableCell>\n                <TableCell align=\"center\">{user.type}</TableCell>\n                <TableCell align=\"center\">\n                  <Checkbox\n                    value={user.name}\n                    onClick={this.handleInputChange} \n                    checked={user.checked}\n                  />\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n        <ThemeProvider theme={theme}>\n          <Button variant=\"contained\" color=\"primary\" allign='center' className={classes.margin} onClick={this.collections}>\n            {/* <Link className={classes.linkPath} to={{ pathname: '/Export', state: { selectedCollection:{this.state.selectedCollection}} }}>Next</Link> */}\n            Next\n          </Button>  \n        </ThemeProvider>  \n      </div>\n    );\n  }\n}\nexport default withStyles(styles)(Collections);\n\n\n","import React, { Component } from 'react';\nimport Login from './components/Login/Login';\nimport Home from './components/Home/Home';\nimport { BrowserRouter, Route, Switch, Redirect} from \"react-router-dom\";\nimport Export from './components/Export/Export';\nimport Exportlist from './components/Exportlist/Exportlist';\nimport Collections from './components/Collections/Collections';\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n      <div className=\"App\">\n          <Switch>\n            <Route path=\"/Login\" component={Login} />\n            <Route path=\"/Home\" component={Home} />\n            <Route path=\"/Export\" component={Export} />\n            <Route path=\"/Exportlist\" component={Exportlist} />\n            <Route path=\"/Collections\" component={Collections} />\n            <Redirect from=\"/\" exact to=\"/Login\" />\n          </Switch>   \n      </div>\n      </BrowserRouter>\n    );\n  }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}